import Modal from"../../src/modal";import EventHandler from"../../src/dom/event-handler";import ScrollBarHelper from"../../src/util/scrollbar";import{clearBodyAndDocument,clearFixture,createEvent,getFixture,jQueryMock}from"../helpers/fixture";describe("Modal",()=>{let e;beforeAll(()=>{e=getFixture()}),afterEach(()=>{clearFixture(),clearBodyAndDocument(),document.body.classList.remove("modal-open"),document.querySelectorAll(".modal-backdrop").forEach(e=>{e.remove()})}),beforeEach(()=>{clearBodyAndDocument()}),describe("VERSION",()=>{it("should return plugin version",()=>{expect(Modal.VERSION).toEqual(jasmine.any(String))})}),describe("Default",()=>{it("should return plugin default config",()=>{expect(Modal.Default).toEqual(jasmine.any(Object))})}),describe("DATA_KEY",()=>{it("should return plugin data key",()=>{expect(Modal.DATA_KEY).toEqual("bs.modal")})}),describe("constructor",()=>{it("should take care of element either passed as a CSS selector or DOM element",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector(".modal"),t=new Modal(".modal"),d=new Modal(o);expect(t._element).toEqual(o),expect(d._element).toEqual(o)})}),describe("toggle",()=>{it("should call ScrollBarHelper to handle scrollBar on body",o=>{e.innerHTML=['<div class="modal"><div class="modal-dialog"></div></div>'].join(""),spyOn(ScrollBarHelper.prototype,"hide").and.callThrough(),spyOn(ScrollBarHelper.prototype,"reset").and.callThrough();const t=e.querySelector(".modal"),d=new Modal(t);t.addEventListener("shown.bs.modal",()=>{expect(ScrollBarHelper.prototype.hide).toHaveBeenCalled(),d.toggle()}),t.addEventListener("hidden.bs.modal",()=>{expect(ScrollBarHelper.prototype.reset).toHaveBeenCalled(),o()}),d.toggle()})}),describe("show",()=>{it("should show a modal",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);t.addEventListener("show.bs.modal",e=>{expect(e).toBeDefined()}),t.addEventListener("shown.bs.modal",()=>{expect(t.getAttribute("aria-modal")).toEqual("true"),expect(t.getAttribute("role")).toEqual("dialog"),expect(t.getAttribute("aria-hidden")).toBeNull(),expect(t.style.display).toEqual("block"),expect(document.querySelector(".modal-backdrop")).not.toBeNull(),o()}),d.show()}),it("should show a modal without backdrop",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t,{backdrop:!1});t.addEventListener("show.bs.modal",e=>{expect(e).toBeDefined()}),t.addEventListener("shown.bs.modal",()=>{expect(t.getAttribute("aria-modal")).toEqual("true"),expect(t.getAttribute("role")).toEqual("dialog"),expect(t.getAttribute("aria-hidden")).toBeNull(),expect(t.style.display).toEqual("block"),expect(document.querySelector(".modal-backdrop")).toBeNull(),o()}),d.show()}),it("should show a modal and append the element",e=>{const o=document.createElement("div"),t="dynamicModal";o.setAttribute("id",t),o.classList.add("modal"),o.innerHTML='<div class="modal-dialog"></div>';const d=new Modal(o);o.addEventListener("shown.bs.modal",()=>{const o=document.getElementById(t);expect(o).not.toBeNull(),o.remove(),e()}),d.show()}),it("should do nothing if a modal is shown",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector(".modal"),t=new Modal(o);spyOn(EventHandler,"trigger"),t._isShown=!0,t.show(),expect(EventHandler.trigger).not.toHaveBeenCalled()}),it("should do nothing if a modal is transitioning",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector(".modal"),t=new Modal(o);spyOn(EventHandler,"trigger"),t._isTransitioning=!0,t.show(),expect(EventHandler.trigger).not.toHaveBeenCalled()}),it("should not fire shown event when show is prevented",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);t.addEventListener("show.bs.modal",e=>{e.preventDefault();setTimeout(()=>{expect().nothing(),o()},10)}),t.addEventListener("shown.bs.modal",()=>{throw new Error("shown event triggered")}),d.show()}),it("should be shown after the first call to show() has been prevented while fading is enabled ",o=>{e.innerHTML='<div class="modal fade"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);let a=!1;t.addEventListener("show.bs.modal",e=>{a||(e.preventDefault(),a=!0,setTimeout(()=>{d.show()}))}),t.addEventListener("shown.bs.modal",()=>{expect(a).toBeTrue(),expect(d._isAnimated()).toBeTrue(),o()}),d.show()}),it("should set is transitioning if fade class is present",o=>{e.innerHTML='<div class="modal fade"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);t.addEventListener("show.bs.modal",()=>{setTimeout(()=>{expect(d._isTransitioning).toEqual(!0)})}),t.addEventListener("shown.bs.modal",()=>{expect(d._isTransitioning).toEqual(!1),o()}),d.show()}),it('should close modal when a click occurred on data-bs-dismiss="modal" inside modal',o=>{e.innerHTML=['<div class="modal fade">','  <div class="modal-dialog">','    <div class="modal-header">','      <button type="button" data-bs-dismiss="modal"></button>',"    </div>","  </div>","</div>"].join("");const t=e.querySelector(".modal"),d=e.querySelector('[data-bs-dismiss="modal"]'),a=new Modal(t);spyOn(a,"hide").and.callThrough(),t.addEventListener("shown.bs.modal",()=>{d.click()}),t.addEventListener("hidden.bs.modal",()=>{expect(a.hide).toHaveBeenCalled(),o()}),a.show()}),it('should close modal when a click occurred on a data-bs-dismiss="modal" with "bs-target" outside of modal element',o=>{e.innerHTML=['<button type="button" data-bs-dismiss="modal" data-bs-target="#modal1"></button>','<div id="modal1" class="modal fade">','  <div class="modal-dialog">',"  </div>","</div>"].join("");const t=e.querySelector(".modal"),d=e.querySelector('[data-bs-dismiss="modal"]'),a=new Modal(t);spyOn(a,"hide").and.callThrough(),t.addEventListener("shown.bs.modal",()=>{d.click()}),t.addEventListener("hidden.bs.modal",()=>{expect(a.hide).toHaveBeenCalled(),o()}),a.show()}),it("should set .modal's scroll top to 0",o=>{e.innerHTML=['<div class="modal fade">','  <div class="modal-dialog">',"  </div>","</div>"].join("");const t=e.querySelector(".modal"),d=new Modal(t);t.addEventListener("shown.bs.modal",()=>{expect(t.scrollTop).toEqual(0),o()}),d.show()}),it("should set modal body scroll top to 0 if modal body do not exists",o=>{e.innerHTML=['<div class="modal fade">','  <div class="modal-dialog">','    <div class="modal-body"></div>',"  </div>","</div>"].join("");const t=e.querySelector(".modal"),d=t.querySelector(".modal-body"),a=new Modal(t);t.addEventListener("shown.bs.modal",()=>{expect(d.scrollTop).toEqual(0),o()}),a.show()}),it("should not trap focus if focus equal to false",o=>{e.innerHTML='<div class="modal fade"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t,{focus:!1});spyOn(d._focustrap,"activate").and.callThrough(),t.addEventListener("shown.bs.modal",()=>{expect(d._focustrap.activate).not.toHaveBeenCalled(),o()}),d.show()}),it("should add listener when escape touch is pressed",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);spyOn(d,"hide").and.callThrough(),t.addEventListener("shown.bs.modal",()=>{const e=createEvent("keydown");e.key="Escape",t.dispatchEvent(e)}),t.addEventListener("hidden.bs.modal",()=>{expect(d.hide).toHaveBeenCalled(),o()}),d.show()}),it("should do nothing when the pressed key is not escape",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);spyOn(d,"hide");const a=()=>{expect(d.hide).not.toHaveBeenCalled(),o()};t.addEventListener("shown.bs.modal",()=>{const e=createEvent("keydown");e.key="Tab",t.dispatchEvent(e),setTimeout(a,30)}),d.show()}),it("should adjust dialog on resize",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);spyOn(d,"_adjustDialog").and.callThrough();const a=()=>{expect(d._adjustDialog).toHaveBeenCalled(),o()};t.addEventListener("shown.bs.modal",()=>{const e=createEvent("resize");window.dispatchEvent(e),setTimeout(a,10)}),d.show()}),it("should not close modal when clicking outside of modal-content if backdrop = false",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t,{backdrop:!1});t.addEventListener("shown.bs.modal",()=>{t.click(),setTimeout(()=>{expect(d._isShown).toEqual(!0),o()},10)}),t.addEventListener("hidden.bs.modal",()=>{throw new Error("Should not hide a modal")}),d.show()}),it("should not close modal when clicking outside of modal-content if backdrop = static",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t,{backdrop:"static"});t.addEventListener("shown.bs.modal",()=>{t.click(),setTimeout(()=>{expect(d._isShown).toEqual(!0),o()},10)}),t.addEventListener("hidden.bs.modal",()=>{throw new Error("Should not hide a modal")}),d.show()}),it("should close modal when escape key is pressed with keyboard = true and backdrop is static",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t,{backdrop:"static",keyboard:!0});t.addEventListener("shown.bs.modal",()=>{const e=createEvent("keydown");e.key="Escape",t.dispatchEvent(e),setTimeout(()=>{expect(d._isShown).toEqual(!1),o()},10)}),d.show()}),it("should not close modal when escape key is pressed with keyboard = false",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t,{keyboard:!1});t.addEventListener("shown.bs.modal",()=>{const e=createEvent("keydown");e.key="Escape",t.dispatchEvent(e),setTimeout(()=>{expect(d._isShown).toEqual(!0),o()},10)}),t.addEventListener("hidden.bs.modal",()=>{throw new Error("Should not hide a modal")}),d.show()}),it("should not overflow when clicking outside of modal-content if backdrop = static",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog" style="transition-duration: 20ms;"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t,{backdrop:"static"});t.addEventListener("shown.bs.modal",()=>{t.click(),setTimeout(()=>{expect(t.clientHeight).toEqual(t.scrollHeight),o()},20)}),d.show()}),it("should not queue multiple callbacks when clicking outside of modal-content and backdrop = static",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog" style="transition-duration: 50ms;"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t,{backdrop:"static"});t.addEventListener("shown.bs.modal",()=>{const e=spyOn(d,"_queueCallback").and.callThrough();t.click(),t.click(),setTimeout(()=>{expect(e).toHaveBeenCalledTimes(1),o()},20)}),d.show()}),it("should trap focus",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);spyOn(d._focustrap,"activate").and.callThrough(),t.addEventListener("shown.bs.modal",()=>{expect(d._focustrap.activate).toHaveBeenCalled(),o()}),d.show()})}),describe("hide",()=>{it("should hide a modal",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);t.addEventListener("shown.bs.modal",()=>{d.hide()}),t.addEventListener("hide.bs.modal",e=>{expect(e).toBeDefined()}),t.addEventListener("hidden.bs.modal",()=>{expect(t.getAttribute("aria-modal")).toBeNull(),expect(t.getAttribute("role")).toBeNull(),expect(t.getAttribute("aria-hidden")).toEqual("true"),expect(t.style.display).toEqual("none"),expect(document.querySelector(".modal-backdrop")).toBeNull(),o()}),d.show()}),it("should close modal when clicking outside of modal-content",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);t.addEventListener("shown.bs.modal",()=>{t.click()}),t.addEventListener("hidden.bs.modal",()=>{expect(t.getAttribute("aria-modal")).toBeNull(),expect(t.getAttribute("role")).toBeNull(),expect(t.getAttribute("aria-hidden")).toEqual("true"),expect(t.style.display).toEqual("none"),expect(document.querySelector(".modal-backdrop")).toBeNull(),o()}),d.show()}),it("should do nothing is the modal is not shown",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector(".modal");new Modal(o).hide(),expect().nothing()}),it("should do nothing is the modal is transitioning",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector(".modal"),t=new Modal(o);t._isTransitioning=!0,t.hide(),expect().nothing()}),it("should not hide a modal if hide is prevented",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);t.addEventListener("shown.bs.modal",()=>{d.hide()});t.addEventListener("hide.bs.modal",e=>{e.preventDefault(),setTimeout(()=>{expect(d._isShown).toEqual(!0),o()},10)}),t.addEventListener("hidden.bs.modal",()=>{throw new Error("should not trigger hidden")}),d.show()}),it("should release focus trap",o=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const t=e.querySelector(".modal"),d=new Modal(t);spyOn(d._focustrap,"deactivate").and.callThrough(),t.addEventListener("shown.bs.modal",()=>{d.hide()}),t.addEventListener("hidden.bs.modal",()=>{expect(d._focustrap.deactivate).toHaveBeenCalled(),o()}),d.show()})}),describe("dispose",()=>{it("should dispose a modal",()=>{e.innerHTML='<div id="exampleModal" class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector(".modal"),t=new Modal(o),d=t._focustrap;spyOn(d,"deactivate").and.callThrough(),expect(Modal.getInstance(o)).toEqual(t),spyOn(EventHandler,"off"),t.dispose(),expect(Modal.getInstance(o)).toBeNull(),expect(EventHandler.off).toHaveBeenCalledTimes(3),expect(d.deactivate).toHaveBeenCalled()})}),describe("handleUpdate",()=>{it("should call adjust dialog",()=>{e.innerHTML='<div id="exampleModal" class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector(".modal"),t=new Modal(o);spyOn(t,"_adjustDialog"),t.handleUpdate(),expect(t._adjustDialog).toHaveBeenCalled()})}),describe("data-api",()=>{it("should toggle modal",o=>{e.innerHTML=['<button type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"></button>','<div id="exampleModal" class="modal"><div class="modal-dialog"></div></div>'].join("");const t=e.querySelector(".modal"),d=e.querySelector('[data-bs-toggle="modal"]');t.addEventListener("shown.bs.modal",()=>{expect(t.getAttribute("aria-modal")).toEqual("true"),expect(t.getAttribute("role")).toEqual("dialog"),expect(t.getAttribute("aria-hidden")).toBeNull(),expect(t.style.display).toEqual("block"),expect(document.querySelector(".modal-backdrop")).not.toBeNull(),setTimeout(()=>d.click(),10)}),t.addEventListener("hidden.bs.modal",()=>{expect(t.getAttribute("aria-modal")).toBeNull(),expect(t.getAttribute("role")).toBeNull(),expect(t.getAttribute("aria-hidden")).toEqual("true"),expect(t.style.display).toEqual("none"),expect(document.querySelector(".modal-backdrop")).toBeNull(),o()}),d.click()}),it("should not recreate a new modal",o=>{e.innerHTML=['<button type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"></button>','<div id="exampleModal" class="modal"><div class="modal-dialog"></div></div>'].join("");const t=e.querySelector(".modal"),d=new Modal(t),a=e.querySelector('[data-bs-toggle="modal"]');spyOn(d,"show").and.callThrough(),t.addEventListener("shown.bs.modal",()=>{expect(d.show).toHaveBeenCalled(),o()}),a.click()}),it("should prevent default when the trigger is <a> or <area>",o=>{e.innerHTML=['<a data-bs-toggle="modal" href="#" data-bs-target="#exampleModal"></a>','<div id="exampleModal" class="modal"><div class="modal-dialog"></div></div>'].join("");const t=e.querySelector(".modal"),d=e.querySelector('[data-bs-toggle="modal"]');spyOn(Event.prototype,"preventDefault").and.callThrough(),t.addEventListener("shown.bs.modal",()=>{expect(t.getAttribute("aria-modal")).toEqual("true"),expect(t.getAttribute("role")).toEqual("dialog"),expect(t.getAttribute("aria-hidden")).toBeNull(),expect(t.style.display).toEqual("block"),expect(document.querySelector(".modal-backdrop")).not.toBeNull(),expect(Event.prototype.preventDefault).toHaveBeenCalled(),o()}),d.click()}),it("should focus the trigger on hide",o=>{e.innerHTML=['<a data-bs-toggle="modal" href="#" data-bs-target="#exampleModal"></a>','<div id="exampleModal" class="modal"><div class="modal-dialog"></div></div>'].join("");const t=e.querySelector(".modal"),d=e.querySelector('[data-bs-toggle="modal"]');spyOn(d,"focus"),t.addEventListener("shown.bs.modal",()=>{Modal.getInstance(t).hide()});t.addEventListener("hidden.bs.modal",()=>{setTimeout(()=>{expect(d.focus).toHaveBeenCalled(),o()},20)}),d.click()}),it('should not prevent default when a click occurred on data-bs-dismiss="modal" where tagName is DIFFERENT than <a> or <area>',o=>{e.innerHTML=['<div class="modal">','  <div class="modal-dialog">','    <button type="button" data-bs-dismiss="modal"></button>',"  </div>","</div>"].join("");const t=e.querySelector(".modal"),d=e.querySelector('button[data-bs-dismiss="modal"]'),a=new Modal(t);spyOn(Event.prototype,"preventDefault").and.callThrough(),t.addEventListener("shown.bs.modal",()=>{d.click()}),t.addEventListener("hidden.bs.modal",()=>{expect(Event.prototype.preventDefault).not.toHaveBeenCalled(),o()}),a.show()}),it('should prevent default when a click occurred on data-bs-dismiss="modal" where tagName is <a> or <area>',o=>{e.innerHTML=['<div class="modal">','  <div class="modal-dialog">','    <a type="button" data-bs-dismiss="modal"></a>',"  </div>","</div>"].join("");const t=e.querySelector(".modal"),d=e.querySelector('a[data-bs-dismiss="modal"]'),a=new Modal(t);spyOn(Event.prototype,"preventDefault").and.callThrough(),t.addEventListener("shown.bs.modal",()=>{d.click()}),t.addEventListener("hidden.bs.modal",()=>{expect(Event.prototype.preventDefault).toHaveBeenCalled(),o()}),a.show()}),it("should not focus the trigger if the modal is not visible",o=>{e.innerHTML=['<a data-bs-toggle="modal" href="#" data-bs-target="#exampleModal" style="display: none;"></a>','<div id="exampleModal" class="modal" style="display: none;"><div class="modal-dialog"></div></div>'].join("");const t=e.querySelector(".modal"),d=e.querySelector('[data-bs-toggle="modal"]');spyOn(d,"focus"),t.addEventListener("shown.bs.modal",()=>{Modal.getInstance(t).hide()});t.addEventListener("hidden.bs.modal",()=>{setTimeout(()=>{expect(d.focus).not.toHaveBeenCalled(),o()},20)}),d.click()}),it("should not focus the trigger if the modal is not shown",o=>{e.innerHTML=['<a data-bs-toggle="modal" href="#" data-bs-target="#exampleModal"></a>','<div id="exampleModal" class="modal"><div class="modal-dialog"></div></div>'].join("");const t=e.querySelector(".modal"),d=e.querySelector('[data-bs-toggle="modal"]');spyOn(d,"focus");t.addEventListener("show.bs.modal",e=>{e.preventDefault(),setTimeout(()=>{expect(d.focus).not.toHaveBeenCalled(),o()},10)}),d.click()}),it("should call hide first, if another modal is open",o=>{e.innerHTML=['<button data-bs-toggle="modal"  data-bs-target="#modal2"></button>','<div id="modal1" class="modal fade"><div class="modal-dialog"></div></div>','<div id="modal2" class="modal"><div class="modal-dialog"></div></div>'].join("");const t=e.querySelector("button"),d=document.querySelector("#modal1"),a=document.querySelector("#modal2"),l=new Modal(d);d.addEventListener("shown.bs.modal",()=>{t.click()}),d.addEventListener("hidden.bs.modal",()=>{expect(Modal.getInstance(a)).not.toBeNull(),expect(a.classList.contains("show")).toBeTrue(),o()}),l.show()})}),describe("jQueryInterface",()=>{it("should create a modal",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector("div");jQueryMock.fn.modal=Modal.jQueryInterface,jQueryMock.elements=[o],jQueryMock.fn.modal.call(jQueryMock),expect(Modal.getInstance(o)).not.toBeNull()}),it("should create a modal with given config",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector("div");jQueryMock.fn.modal=Modal.jQueryInterface,jQueryMock.elements=[o],jQueryMock.fn.modal.call(jQueryMock,{keyboard:!1}),spyOn(Modal.prototype,"constructor"),expect(Modal.prototype.constructor).not.toHaveBeenCalledWith(o,{keyboard:!1});const t=Modal.getInstance(o);expect(t).not.toBeNull(),expect(t._config.keyboard).toBe(!1)}),it("should not re create a modal",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector("div"),t=new Modal(o);jQueryMock.fn.modal=Modal.jQueryInterface,jQueryMock.elements=[o],jQueryMock.fn.modal.call(jQueryMock),expect(Modal.getInstance(o)).toEqual(t)}),it("should throw error on undefined method",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector("div");jQueryMock.fn.modal=Modal.jQueryInterface,jQueryMock.elements=[o],expect(()=>{jQueryMock.fn.modal.call(jQueryMock,"undefinedMethod")}).toThrowError(TypeError,'No method named "undefinedMethod"')}),it("should call show method",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector("div"),t=new Modal(o);jQueryMock.fn.modal=Modal.jQueryInterface,jQueryMock.elements=[o],spyOn(t,"show"),jQueryMock.fn.modal.call(jQueryMock,"show"),expect(t.show).toHaveBeenCalled()}),it("should not call show method",()=>{e.innerHTML='<div class="modal" data-bs-show="false"><div class="modal-dialog"></div></div>';const o=e.querySelector("div");jQueryMock.fn.modal=Modal.jQueryInterface,jQueryMock.elements=[o],spyOn(Modal.prototype,"show"),jQueryMock.fn.modal.call(jQueryMock),expect(Modal.prototype.show).not.toHaveBeenCalled()})}),describe("getInstance",()=>{it("should return modal instance",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector("div"),t=new Modal(o);expect(Modal.getInstance(o)).toEqual(t),expect(Modal.getInstance(o)).toBeInstanceOf(Modal)}),it("should return null when there is no modal instance",()=>{e.innerHTML='<div class="modal"><div class="modal-dialog"></div></div>';const o=e.querySelector("div");expect(Modal.getInstance(o)).toBeNull()})}),describe("getOrCreateInstance",()=>{it("should return modal instance",()=>{e.innerHTML="<div></div>";const o=e.querySelector("div"),t=new Modal(o);expect(Modal.getOrCreateInstance(o)).toEqual(t),expect(Modal.getInstance(o)).toEqual(Modal.getOrCreateInstance(o,{})),expect(Modal.getOrCreateInstance(o)).toBeInstanceOf(Modal)}),it("should return new instance when there is no modal instance",()=>{e.innerHTML="<div></div>";const o=e.querySelector("div");expect(Modal.getInstance(o)).toEqual(null),expect(Modal.getOrCreateInstance(o)).toBeInstanceOf(Modal)}),it("should return new instance when there is no modal instance with given configuration",()=>{e.innerHTML="<div></div>";const o=e.querySelector("div");expect(Modal.getInstance(o)).toEqual(null);const t=Modal.getOrCreateInstance(o,{backdrop:!0});expect(t).toBeInstanceOf(Modal),expect(t._config.backdrop).toEqual(!0)}),it("should return the instance when exists without given configuration",()=>{e.innerHTML="<div></div>";const o=e.querySelector("div"),t=new Modal(o,{backdrop:!0});expect(Modal.getInstance(o)).toEqual(t);const d=Modal.getOrCreateInstance(o,{backdrop:!1});expect(t).toBeInstanceOf(Modal),expect(d).toEqual(t),expect(d._config.backdrop).toEqual(!0)})})});