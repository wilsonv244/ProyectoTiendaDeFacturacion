import Popover from"../../src/popover";import{clearFixture,getFixture,jQueryMock}from"../helpers/fixture";describe("Popover",()=>{let e;beforeAll(()=>{e=getFixture()}),afterEach(()=>{clearFixture();document.querySelectorAll(".popover").forEach(e=>{e.remove()})}),describe("VERSION",()=>{it("should return plugin version",()=>{expect(Popover.VERSION).toEqual(jasmine.any(String))})}),describe("Default",()=>{it("should return plugin default config",()=>{expect(Popover.Default).toEqual(jasmine.any(Object))})}),describe("NAME",()=>{it("should return plugin name",()=>{expect(Popover.NAME).toEqual(jasmine.any(String))})}),describe("DATA_KEY",()=>{it("should return plugin data key",()=>{expect(Popover.DATA_KEY).toEqual("bs.popover")})}),describe("Event",()=>{it("should return plugin events",()=>{expect(Popover.Event).toEqual(jasmine.any(Object))})}),describe("EVENT_KEY",()=>{it("should return plugin event key",()=>{expect(Popover.EVENT_KEY).toEqual(".bs.popover")})}),describe("DefaultType",()=>{it("should return plugin default type",()=>{expect(Popover.DefaultType).toEqual(jasmine.any(Object))})}),describe("show",()=>{it("should show a popover",t=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o);o.addEventListener("shown.bs.popover",()=>{expect(document.querySelector(".popover")).not.toBeNull(),t()}),r.show()}),it("should set title and content from functions",t=>{e.innerHTML='<a href="#">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o,{title:()=>"Bootstrap",content:()=>"loves writing tests （╯°□°）╯︵ ┻━┻"});o.addEventListener("shown.bs.popover",()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.querySelector(".popover-header").textContent).toEqual("Bootstrap"),expect(e.querySelector(".popover-body").textContent).toEqual("loves writing tests （╯°□°）╯︵ ┻━┻"),t()}),r.show()}),it("should show a popover with just content",t=>{e.innerHTML='<a href="#">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o,{content:"Popover content"});o.addEventListener("shown.bs.popover",()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.querySelector(".popover-body").textContent).toEqual("Popover content"),t()}),r.show()}),it("should show a popover with just content without having header",t=>{e.innerHTML='<a href="#">Nice link</a>';const o=e.querySelector("a"),r=new Popover(o,{content:"Some beautiful content :)"});o.addEventListener("shown.bs.popover",()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.querySelector(".popover-header")).toBeNull(),expect(e.querySelector(".popover-body").textContent).toEqual("Some beautiful content :)"),t()}),r.show()}),it("should show a popover with just title without having body",t=>{e.innerHTML='<a href="#">Nice link</a>';const o=e.querySelector("a"),r=new Popover(o,{title:"Title, which does not require content"});o.addEventListener("shown.bs.popover",()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.querySelector(".popover-body")).toBeNull(),expect(e.querySelector(".popover-header").textContent).toEqual("Title, which does not require content"),t()}),r.show()}),it("should call setContent once",t=>{e.innerHTML='<a href="#">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o,{content:"Popover content"}),n=spyOn(r,"setContent").and.callThrough();let c=1;o.addEventListener("hidden.bs.popover",()=>{r.show()}),o.addEventListener("shown.bs.popover",()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.querySelector(".popover-body").textContent).toEqual("Popover content"),expect(n).toHaveBeenCalledTimes(1),c>1&&t(),c++,r.hide()}),r.show()}),it("should show a popover with provided custom class",t=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap" data-bs-custom-class="custom-class">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o);o.addEventListener("shown.bs.popover",()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.classList.contains("custom-class")).toBeTrue(),t()}),r.show()})}),describe("hide",()=>{it("should hide a popover",t=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o);o.addEventListener("shown.bs.popover",()=>{r.hide()}),o.addEventListener("hidden.bs.popover",()=>{expect(document.querySelector(".popover")).toBeNull(),t()}),r.show()})}),describe("jQueryInterface",()=>{it("should create a popover",()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a");jQueryMock.fn.popover=Popover.jQueryInterface,jQueryMock.elements=[t],jQueryMock.fn.popover.call(jQueryMock),expect(Popover.getInstance(t)).not.toBeNull()}),it("should create a popover with a config object",()=>{e.innerHTML='<a href="#" title="Popover">BS twitter</a>';const t=e.querySelector("a");jQueryMock.fn.popover=Popover.jQueryInterface,jQueryMock.elements=[t],jQueryMock.fn.popover.call(jQueryMock,{content:"Popover content"}),expect(Popover.getInstance(t)).not.toBeNull()}),it("should not re create a popover",()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a"),o=new Popover(t);jQueryMock.fn.popover=Popover.jQueryInterface,jQueryMock.elements=[t],jQueryMock.fn.popover.call(jQueryMock),expect(Popover.getInstance(t)).toEqual(o)}),it("should throw error on undefined method",()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a");jQueryMock.fn.popover=Popover.jQueryInterface,jQueryMock.elements=[t],expect(()=>{jQueryMock.fn.popover.call(jQueryMock,"undefinedMethod")}).toThrowError(TypeError,'No method named "undefinedMethod"')}),it("should should call show method",()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a"),o=new Popover(t);jQueryMock.fn.popover=Popover.jQueryInterface,jQueryMock.elements=[t],spyOn(o,"show"),jQueryMock.fn.popover.call(jQueryMock,"show"),expect(o.show).toHaveBeenCalled()})}),describe("getInstance",()=>{it("should return popover instance",()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a"),o=new Popover(t);expect(Popover.getInstance(t)).toEqual(o),expect(Popover.getInstance(t)).toBeInstanceOf(Popover)}),it("should return null when there is no popover instance",()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a");expect(Popover.getInstance(t)).toEqual(null)})}),describe("getOrCreateInstance",()=>{it("should return popover instance",()=>{e.innerHTML="<div></div>";const t=e.querySelector("div"),o=new Popover(t);expect(Popover.getOrCreateInstance(t)).toEqual(o),expect(Popover.getInstance(t)).toEqual(Popover.getOrCreateInstance(t,{})),expect(Popover.getOrCreateInstance(t)).toBeInstanceOf(Popover)}),it("should return new instance when there is no popover instance",()=>{e.innerHTML="<div></div>";const t=e.querySelector("div");expect(Popover.getInstance(t)).toEqual(null),expect(Popover.getOrCreateInstance(t)).toBeInstanceOf(Popover)}),it("should return new instance when there is no popover instance with given configuration",()=>{e.innerHTML="<div></div>";const t=e.querySelector("div");expect(Popover.getInstance(t)).toEqual(null);const o=Popover.getOrCreateInstance(t,{placement:"top"});expect(o).toBeInstanceOf(Popover),expect(o._config.placement).toEqual("top")}),it("should return the instance when exists without given configuration",()=>{e.innerHTML="<div></div>";const t=e.querySelector("div"),o=new Popover(t,{placement:"top"});expect(Popover.getInstance(t)).toEqual(o);const r=Popover.getOrCreateInstance(t,{placement:"bottom"});expect(o).toBeInstanceOf(Popover),expect(r).toEqual(o),expect(r._config.placement).toEqual("top")})})});