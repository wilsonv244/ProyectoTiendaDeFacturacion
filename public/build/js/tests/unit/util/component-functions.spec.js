import{clearFixture,createEvent,getFixture}from"../../helpers/fixture";import{enableDismissTrigger}from"../../../src/util/component-functions";import BaseComponent from"../../../src/base-component";class DummyClass2 extends BaseComponent{static get NAME(){return"test"}hide(){return!0}testMethod(){return!0}}describe("Plugin functions",()=>{let e;beforeAll(()=>{e=getFixture()}),afterEach(()=>{clearFixture()}),describe("data-bs-dismiss functionality",()=>{it('should get Plugin and execute the given method, when a click occurred on data-bs-dismiss="PluginName"',()=>{e.innerHTML=['<div id="foo" class="test">','      <button type="button" data-bs-dismiss="test" data-bs-target="#foo"></button>',"</div>"].join(""),spyOn(DummyClass2,"getOrCreateInstance").and.callThrough(),spyOn(DummyClass2.prototype,"testMethod");const t=e.querySelector("#foo"),s=e.querySelector('[data-bs-dismiss="test"]'),a=createEvent("click");enableDismissTrigger(DummyClass2,"testMethod"),s.dispatchEvent(a),expect(DummyClass2.getOrCreateInstance).toHaveBeenCalledWith(t),expect(DummyClass2.prototype.testMethod).toHaveBeenCalled()}),it('if data-bs-dismiss="PluginName" hasn\'t got "data-bs-target", "getOrCreateInstance" has to be initialized by closest "plugin.Name" class',()=>{e.innerHTML=['<div id="foo" class="test">','   <button type="button" data-bs-dismiss="test"></button>',"</div>"].join(""),spyOn(DummyClass2,"getOrCreateInstance").and.callThrough(),spyOn(DummyClass2.prototype,"hide");const t=e.querySelector("#foo"),s=e.querySelector('[data-bs-dismiss="test"]'),a=createEvent("click");enableDismissTrigger(DummyClass2),s.dispatchEvent(a),expect(DummyClass2.getOrCreateInstance).toHaveBeenCalledWith(t),expect(DummyClass2.prototype.hide).toHaveBeenCalled()}),it('if data-bs-dismiss="PluginName" is disabled, must not trigger function',()=>{e.innerHTML=['<div id="foo" class="test">','   <button type="button" disabled data-bs-dismiss="test"></button>',"</div>"].join(""),spyOn(DummyClass2,"getOrCreateInstance").and.callThrough();const t=e.querySelector('[data-bs-dismiss="test"]'),s=createEvent("click");enableDismissTrigger(DummyClass2),t.dispatchEvent(s),expect(DummyClass2.getOrCreateInstance).not.toHaveBeenCalled()}),it("should prevent default when the trigger is <a> or <area>",()=>{e.innerHTML=['<div id="foo" class="test">','      <a type="button" data-bs-dismiss="test"></a>',"</div>"].join("");const t=e.querySelector('[data-bs-dismiss="test"]'),s=createEvent("click");enableDismissTrigger(DummyClass2),spyOn(Event.prototype,"preventDefault").and.callThrough(),t.dispatchEvent(s),expect(Event.prototype.preventDefault).toHaveBeenCalled()})})});